State 34 conflicts: 2 shift/reduce
State 35 conflicts: 1 shift/reduce
State 48 conflicts: 1 shift/reduce
State 86 conflicts: 2 shift/reduce
State 87 conflicts: 1 shift/reduce
State 88 conflicts: 1 shift/reduce


Grammar

    0 $accept: function $end

    1 function: function_header optional_variable body

    2 function_header: FUNCTION IDENTIFIER optional_parameters RETURNS type ';'
    3                | error ';'

    4 optional_parameters: optional_parameters parameters
    5                    | ε

    6 parameters: parameters ',' parameter
    7           | parameter

    8 parameter: IDENTIFIER ':' type

    9 type: INTEGER
   10     | REAL
   11     | CHARACTER

   12 optional_variable: optional_variable variable
   13                  | ε

   14 variable: IDENTIFIER ':' type IS statement ';'
   15         | IDENTIFIER ':' LIST OF type IS list ';'

   16 list: '(' expressions ')'

   17 expressions: expressions ',' expression
   18            | expression

   19 body: BEGIN_ statement_ END ';'

   20 statement_: statement ';'
   21           | error ';'

   22 statement: expression
   23          | WHEN condition ',' expression ':' expression
   24          | SWITCH expression IS cases OTHERS ARROW statement ';' ENDSWITCH
   25          | IF condition THEN statement_ other ELSE statement_ ENDIF
   26          | FOLD direction operator list_choice ENDFOLD

   27 other: other ELSIF condition THEN statement ';'
   28      | ε

   29 cases: cases case
   30      | ε

   31 case: CASE INT_LITERAL ARROW statement ';'

   32 direction: LEFT
   33          | RIGHT

   34 operator: ADDOP
   35         | MULOP

   36 list_choice: list
   37            | IDENTIFIER

   38 condition: condition OROP condition_
   39          | condition_

   40 condition_: condition_ ANDOP relation
   41           | relation

   42 relation: '(' condition ')'
   43         | expression RELOP expression

   44 expression: expression ADDOP term
   45           | term

   46 term: term MULOP factor
   47     | term REMOP factor
   48     | factor

   49 factor: unary
   50       | factor EXPOP unary

   51 unary: NOTOP primary
   52      | primary

   53 primary: '(' expression ')'
   54        | NEGOP expression
   55        | INT_LITERAL
   56        | REAL_LITERAL
   57        | CHAR_LITERAL
   58        | IDENTIFIER '(' expression ')'
   59        | IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 16 42 53 58
    ')' (41) 16 42 53 58
    ',' (44) 6 17 23
    ':' (58) 8 14 15 23
    ';' (59) 2 3 14 15 19 20 21 24 27 31
    error (256) 3 21
    IDENTIFIER (258) 2 8 14 15 37 58 59
    INT_LITERAL (259) 31 55
    CHAR_LITERAL (260) 57
    REAL_LITERAL (261) 56
    ADDOP (262) 34 44
    MULOP (263) 35 46
    ANDOP (264) 40
    RELOP (265) 43
    ARROW (266) 24 31
    REMOP (267) 47
    EXPOP (268) 50
    NEGOP (269) 54
    OROP (270) 38
    NOTOP (271) 51
    BEGIN_ (272) 19
    CASE (273) 31
    CHARACTER (274) 11
    END (275) 19
    ENDSWITCH (276) 24
    FUNCTION (277) 2
    INTEGER (278) 9
    IS (279) 14 15 24
    LIST (280) 15
    OF (281) 15
    OTHERS (282) 24
    RETURNS (283) 2
    SWITCH (284) 24
    WHEN (285) 23
    ELSE (286) 25
    ELSIF (287) 27
    ENDFOLD (288) 26
    ENDIF (289) 25
    FOLD (290) 26
    IF (291) 25
    LEFT (292) 32
    REAL (293) 10
    RIGHT (294) 33
    THEN (295) 25 27


Nonterminals, with rules where they appear

    $accept (46)
        on left: 0
    function (47)
        on left: 1
        on right: 0
    function_header (48)
        on left: 2 3
        on right: 1
    optional_parameters (49)
        on left: 4 5
        on right: 2 4
    parameters (50)
        on left: 6 7
        on right: 4 6
    parameter (51)
        on left: 8
        on right: 6 7
    type (52)
        on left: 9 10 11
        on right: 2 8 14 15
    optional_variable (53)
        on left: 12 13
        on right: 1 12
    variable (54)
        on left: 14 15
        on right: 12
    list (55)
        on left: 16
        on right: 15 36
    expressions (56)
        on left: 17 18
        on right: 16 17
    body (57)
        on left: 19
        on right: 1
    statement_ (58)
        on left: 20 21
        on right: 19 25
    statement (59)
        on left: 22 23 24 25 26
        on right: 14 20 24 27 31
    other (60)
        on left: 27 28
        on right: 25 27
    cases (61)
        on left: 29 30
        on right: 24 29
    case (62)
        on left: 31
        on right: 29
    direction (63)
        on left: 32 33
        on right: 26
    operator (64)
        on left: 34 35
        on right: 26
    list_choice (65)
        on left: 36 37
        on right: 26
    condition (66)
        on left: 38 39
        on right: 23 25 27 38 42
    condition_ (67)
        on left: 40 41
        on right: 38 39 40
    relation (68)
        on left: 42 43
        on right: 40 41
    expression (69)
        on left: 44 45
        on right: 17 18 22 23 24 43 44 53 54 58
    term (70)
        on left: 46 47 48
        on right: 44 45 46 47
    factor (71)
        on left: 49 50
        on right: 46 47 48 50
    unary (72)
        on left: 51 52
        on right: 49 50
    primary (73)
        on left: 53 54 55 56 57 58 59
        on right: 51 52


State 0

    0 $accept: • function $end

    error     shift, and go to state 1
    FUNCTION  shift, and go to state 2

    function         go to state 3
    function_header  go to state 4


State 1

    3 function_header: error • ';'

    ';'  shift, and go to state 5


State 2

    2 function_header: FUNCTION • IDENTIFIER optional_parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 6


State 3

    0 $accept: function • $end

    $end  shift, and go to state 7


State 4

    1 function: function_header • optional_variable body

    $default  reduce using rule 13 (optional_variable)

    optional_variable  go to state 8


State 5

    3 function_header: error ';' •

    $default  reduce using rule 3 (function_header)


State 6

    2 function_header: FUNCTION IDENTIFIER • optional_parameters RETURNS type ';'

    $default  reduce using rule 5 (optional_parameters)

    optional_parameters  go to state 9


State 7

    0 $accept: function $end •

    $default  accept


State 8

    1 function: function_header optional_variable • body
   12 optional_variable: optional_variable • variable

    IDENTIFIER  shift, and go to state 10
    BEGIN_      shift, and go to state 11

    variable  go to state 12
    body      go to state 13


State 9

    2 function_header: FUNCTION IDENTIFIER optional_parameters • RETURNS type ';'
    4 optional_parameters: optional_parameters • parameters

    IDENTIFIER  shift, and go to state 14
    RETURNS     shift, and go to state 15

    parameters  go to state 16
    parameter   go to state 17


State 10

   14 variable: IDENTIFIER • ':' type IS statement ';'
   15         | IDENTIFIER • ':' LIST OF type IS list ';'

    ':'  shift, and go to state 18


State 11

   19 body: BEGIN_ • statement_ END ';'

    error         shift, and go to state 19
    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    NOTOP         shift, and go to state 25
    SWITCH        shift, and go to state 26
    WHEN          shift, and go to state 27
    FOLD          shift, and go to state 28
    IF            shift, and go to state 29
    '('           shift, and go to state 30

    statement_  go to state 31
    statement   go to state 32
    expression  go to state 33
    term        go to state 34
    factor      go to state 35
    unary       go to state 36
    primary     go to state 37


State 12

   12 optional_variable: optional_variable variable •

    $default  reduce using rule 12 (optional_variable)


State 13

    1 function: function_header optional_variable body •

    $default  reduce using rule 1 (function)


State 14

    8 parameter: IDENTIFIER • ':' type

    ':'  shift, and go to state 38


State 15

    2 function_header: FUNCTION IDENTIFIER optional_parameters RETURNS • type ';'

    CHARACTER  shift, and go to state 39
    INTEGER    shift, and go to state 40
    REAL       shift, and go to state 41

    type  go to state 42


State 16

    4 optional_parameters: optional_parameters parameters •
    6 parameters: parameters • ',' parameter

    ','  shift, and go to state 43

    $default  reduce using rule 4 (optional_parameters)


State 17

    7 parameters: parameter •

    $default  reduce using rule 7 (parameters)


State 18

   14 variable: IDENTIFIER ':' • type IS statement ';'
   15         | IDENTIFIER ':' • LIST OF type IS list ';'

    CHARACTER  shift, and go to state 39
    INTEGER    shift, and go to state 40
    LIST       shift, and go to state 44
    REAL       shift, and go to state 41

    type  go to state 45


State 19

   21 statement_: error • ';'

    ';'  shift, and go to state 46


State 20

   58 primary: IDENTIFIER • '(' expression ')'
   59        | IDENTIFIER •

    '('  shift, and go to state 47

    $default  reduce using rule 59 (primary)


State 21

   55 primary: INT_LITERAL •

    $default  reduce using rule 55 (primary)


State 22

   57 primary: CHAR_LITERAL •

    $default  reduce using rule 57 (primary)


State 23

   56 primary: REAL_LITERAL •

    $default  reduce using rule 56 (primary)


State 24

   54 primary: NEGOP • expression

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    NOTOP         shift, and go to state 25
    '('           shift, and go to state 30

    expression  go to state 48
    term        go to state 34
    factor      go to state 35
    unary       go to state 36
    primary     go to state 37


State 25

   51 unary: NOTOP • primary

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 30

    primary  go to state 49


State 26

   24 statement: SWITCH • expression IS cases OTHERS ARROW statement ';' ENDSWITCH

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    NOTOP         shift, and go to state 25
    '('           shift, and go to state 30

    expression  go to state 50
    term        go to state 34
    factor      go to state 35
    unary       go to state 36
    primary     go to state 37


State 27

   23 statement: WHEN • condition ',' expression ':' expression

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    NOTOP         shift, and go to state 25
    '('           shift, and go to state 51

    condition   go to state 52
    condition_  go to state 53
    relation    go to state 54
    expression  go to state 55
    term        go to state 34
    factor      go to state 35
    unary       go to state 36
    primary     go to state 37


State 28

   26 statement: FOLD • direction operator list_choice ENDFOLD

    LEFT   shift, and go to state 56
    RIGHT  shift, and go to state 57

    direction  go to state 58


State 29

   25 statement: IF • condition THEN statement_ other ELSE statement_ ENDIF

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    NOTOP         shift, and go to state 25
    '('           shift, and go to state 51

    condition   go to state 59
    condition_  go to state 53
    relation    go to state 54
    expression  go to state 55
    term        go to state 34
    factor      go to state 35
    unary       go to state 36
    primary     go to state 37


State 30

   53 primary: '(' • expression ')'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    NOTOP         shift, and go to state 25
    '('           shift, and go to state 30

    expression  go to state 60
    term        go to state 34
    factor      go to state 35
    unary       go to state 36
    primary     go to state 37


State 31

   19 body: BEGIN_ statement_ • END ';'

    END  shift, and go to state 61


State 32

   20 statement_: statement • ';'

    ';'  shift, and go to state 62


State 33

   22 statement: expression •
   44 expression: expression • ADDOP term

    ADDOP  shift, and go to state 63

    $default  reduce using rule 22 (statement)


State 34

   45 expression: term •
   46 term: term • MULOP factor
   47     | term • REMOP factor

    MULOP  shift, and go to state 64
    REMOP  shift, and go to state 65

    MULOP     [reduce using rule 45 (expression)]
    REMOP     [reduce using rule 45 (expression)]
    $default  reduce using rule 45 (expression)


State 35

   48 term: factor •
   50 factor: factor • EXPOP unary

    EXPOP  shift, and go to state 66

    EXPOP     [reduce using rule 48 (term)]
    $default  reduce using rule 48 (term)


State 36

   49 factor: unary •

    $default  reduce using rule 49 (factor)


State 37

   52 unary: primary •

    $default  reduce using rule 52 (unary)


State 38

    8 parameter: IDENTIFIER ':' • type

    CHARACTER  shift, and go to state 39
    INTEGER    shift, and go to state 40
    REAL       shift, and go to state 41

    type  go to state 67


State 39

   11 type: CHARACTER •

    $default  reduce using rule 11 (type)


State 40

    9 type: INTEGER •

    $default  reduce using rule 9 (type)


State 41

   10 type: REAL •

    $default  reduce using rule 10 (type)


State 42

    2 function_header: FUNCTION IDENTIFIER optional_parameters RETURNS type • ';'

    ';'  shift, and go to state 68


State 43

    6 parameters: parameters ',' • parameter

    IDENTIFIER  shift, and go to state 14

    parameter  go to state 69


State 44

   15 variable: IDENTIFIER ':' LIST • OF type IS list ';'

    OF  shift, and go to state 70


State 45

   14 variable: IDENTIFIER ':' type • IS statement ';'

    IS  shift, and go to state 71


State 46

   21 statement_: error ';' •

    $default  reduce using rule 21 (statement_)


State 47

   58 primary: IDENTIFIER '(' • expression ')'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    NOTOP         shift, and go to state 25
    '('           shift, and go to state 30

    expression  go to state 72
    term        go to state 34
    factor      go to state 35
    unary       go to state 36
    primary     go to state 37


State 48

   44 expression: expression • ADDOP term
   54 primary: NEGOP expression •

    ADDOP  shift, and go to state 63

    ADDOP     [reduce using rule 54 (primary)]
    $default  reduce using rule 54 (primary)


State 49

   51 unary: NOTOP primary •

    $default  reduce using rule 51 (unary)


State 50

   24 statement: SWITCH expression • IS cases OTHERS ARROW statement ';' ENDSWITCH
   44 expression: expression • ADDOP term

    ADDOP  shift, and go to state 63
    IS     shift, and go to state 73


State 51

   42 relation: '(' • condition ')'
   53 primary: '(' • expression ')'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    NOTOP         shift, and go to state 25
    '('           shift, and go to state 51

    condition   go to state 74
    condition_  go to state 53
    relation    go to state 54
    expression  go to state 75
    term        go to state 34
    factor      go to state 35
    unary       go to state 36
    primary     go to state 37


State 52

   23 statement: WHEN condition • ',' expression ':' expression
   38 condition: condition • OROP condition_

    OROP  shift, and go to state 76
    ','   shift, and go to state 77


State 53

   39 condition: condition_ •
   40 condition_: condition_ • ANDOP relation

    ANDOP  shift, and go to state 78

    $default  reduce using rule 39 (condition)


State 54

   41 condition_: relation •

    $default  reduce using rule 41 (condition_)


State 55

   43 relation: expression • RELOP expression
   44 expression: expression • ADDOP term

    ADDOP  shift, and go to state 63
    RELOP  shift, and go to state 79


State 56

   32 direction: LEFT •

    $default  reduce using rule 32 (direction)


State 57

   33 direction: RIGHT •

    $default  reduce using rule 33 (direction)


State 58

   26 statement: FOLD direction • operator list_choice ENDFOLD

    ADDOP  shift, and go to state 80
    MULOP  shift, and go to state 81

    operator  go to state 82


State 59

   25 statement: IF condition • THEN statement_ other ELSE statement_ ENDIF
   38 condition: condition • OROP condition_

    OROP  shift, and go to state 76
    THEN  shift, and go to state 83


State 60

   44 expression: expression • ADDOP term
   53 primary: '(' expression • ')'

    ADDOP  shift, and go to state 63
    ')'    shift, and go to state 84


State 61

   19 body: BEGIN_ statement_ END • ';'

    ';'  shift, and go to state 85


State 62

   20 statement_: statement ';' •

    $default  reduce using rule 20 (statement_)


State 63

   44 expression: expression ADDOP • term

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    NOTOP         shift, and go to state 25
    '('           shift, and go to state 30

    term     go to state 86
    factor   go to state 35
    unary    go to state 36
    primary  go to state 37


State 64

   46 term: term MULOP • factor

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    NOTOP         shift, and go to state 25
    '('           shift, and go to state 30

    factor   go to state 87
    unary    go to state 36
    primary  go to state 37


State 65

   47 term: term REMOP • factor

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    NOTOP         shift, and go to state 25
    '('           shift, and go to state 30

    factor   go to state 88
    unary    go to state 36
    primary  go to state 37


State 66

   50 factor: factor EXPOP • unary

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    NOTOP         shift, and go to state 25
    '('           shift, and go to state 30

    unary    go to state 89
    primary  go to state 37


State 67

    8 parameter: IDENTIFIER ':' type •

    $default  reduce using rule 8 (parameter)


State 68

    2 function_header: FUNCTION IDENTIFIER optional_parameters RETURNS type ';' •

    $default  reduce using rule 2 (function_header)


State 69

    6 parameters: parameters ',' parameter •

    $default  reduce using rule 6 (parameters)


State 70

   15 variable: IDENTIFIER ':' LIST OF • type IS list ';'

    CHARACTER  shift, and go to state 39
    INTEGER    shift, and go to state 40
    REAL       shift, and go to state 41

    type  go to state 90


State 71

   14 variable: IDENTIFIER ':' type IS • statement ';'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    NOTOP         shift, and go to state 25
    SWITCH        shift, and go to state 26
    WHEN          shift, and go to state 27
    FOLD          shift, and go to state 28
    IF            shift, and go to state 29
    '('           shift, and go to state 30

    statement   go to state 91
    expression  go to state 33
    term        go to state 34
    factor      go to state 35
    unary       go to state 36
    primary     go to state 37


State 72

   44 expression: expression • ADDOP term
   58 primary: IDENTIFIER '(' expression • ')'

    ADDOP  shift, and go to state 63
    ')'    shift, and go to state 92


State 73

   24 statement: SWITCH expression IS • cases OTHERS ARROW statement ';' ENDSWITCH

    $default  reduce using rule 30 (cases)

    cases  go to state 93


State 74

   38 condition: condition • OROP condition_
   42 relation: '(' condition • ')'

    OROP  shift, and go to state 76
    ')'   shift, and go to state 94


State 75

   43 relation: expression • RELOP expression
   44 expression: expression • ADDOP term
   53 primary: '(' expression • ')'

    ADDOP  shift, and go to state 63
    RELOP  shift, and go to state 79
    ')'    shift, and go to state 84


State 76

   38 condition: condition OROP • condition_

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    NOTOP         shift, and go to state 25
    '('           shift, and go to state 51

    condition_  go to state 95
    relation    go to state 54
    expression  go to state 55
    term        go to state 34
    factor      go to state 35
    unary       go to state 36
    primary     go to state 37


State 77

   23 statement: WHEN condition ',' • expression ':' expression

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    NOTOP         shift, and go to state 25
    '('           shift, and go to state 30

    expression  go to state 96
    term        go to state 34
    factor      go to state 35
    unary       go to state 36
    primary     go to state 37


State 78

   40 condition_: condition_ ANDOP • relation

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    NOTOP         shift, and go to state 25
    '('           shift, and go to state 51

    relation    go to state 97
    expression  go to state 55
    term        go to state 34
    factor      go to state 35
    unary       go to state 36
    primary     go to state 37


State 79

   43 relation: expression RELOP • expression

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    NOTOP         shift, and go to state 25
    '('           shift, and go to state 30

    expression  go to state 98
    term        go to state 34
    factor      go to state 35
    unary       go to state 36
    primary     go to state 37


State 80

   34 operator: ADDOP •

    $default  reduce using rule 34 (operator)


State 81

   35 operator: MULOP •

    $default  reduce using rule 35 (operator)


State 82

   26 statement: FOLD direction operator • list_choice ENDFOLD

    IDENTIFIER  shift, and go to state 99
    '('         shift, and go to state 100

    list         go to state 101
    list_choice  go to state 102


State 83

   25 statement: IF condition THEN • statement_ other ELSE statement_ ENDIF

    error         shift, and go to state 19
    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    NOTOP         shift, and go to state 25
    SWITCH        shift, and go to state 26
    WHEN          shift, and go to state 27
    FOLD          shift, and go to state 28
    IF            shift, and go to state 29
    '('           shift, and go to state 30

    statement_  go to state 103
    statement   go to state 32
    expression  go to state 33
    term        go to state 34
    factor      go to state 35
    unary       go to state 36
    primary     go to state 37


State 84

   53 primary: '(' expression ')' •

    $default  reduce using rule 53 (primary)


State 85

   19 body: BEGIN_ statement_ END ';' •

    $default  reduce using rule 19 (body)


State 86

   44 expression: expression ADDOP term •
   46 term: term • MULOP factor
   47     | term • REMOP factor

    MULOP  shift, and go to state 64
    REMOP  shift, and go to state 65

    MULOP     [reduce using rule 44 (expression)]
    REMOP     [reduce using rule 44 (expression)]
    $default  reduce using rule 44 (expression)


State 87

   46 term: term MULOP factor •
   50 factor: factor • EXPOP unary

    EXPOP  shift, and go to state 66

    EXPOP     [reduce using rule 46 (term)]
    $default  reduce using rule 46 (term)


State 88

   47 term: term REMOP factor •
   50 factor: factor • EXPOP unary

    EXPOP  shift, and go to state 66

    EXPOP     [reduce using rule 47 (term)]
    $default  reduce using rule 47 (term)


State 89

   50 factor: factor EXPOP unary •

    $default  reduce using rule 50 (factor)


State 90

   15 variable: IDENTIFIER ':' LIST OF type • IS list ';'

    IS  shift, and go to state 104


State 91

   14 variable: IDENTIFIER ':' type IS statement • ';'

    ';'  shift, and go to state 105


State 92

   58 primary: IDENTIFIER '(' expression ')' •

    $default  reduce using rule 58 (primary)


State 93

   24 statement: SWITCH expression IS cases • OTHERS ARROW statement ';' ENDSWITCH
   29 cases: cases • case

    CASE    shift, and go to state 106
    OTHERS  shift, and go to state 107

    case  go to state 108


State 94

   42 relation: '(' condition ')' •

    $default  reduce using rule 42 (relation)


State 95

   38 condition: condition OROP condition_ •
   40 condition_: condition_ • ANDOP relation

    ANDOP  shift, and go to state 78

    $default  reduce using rule 38 (condition)


State 96

   23 statement: WHEN condition ',' expression • ':' expression
   44 expression: expression • ADDOP term

    ADDOP  shift, and go to state 63
    ':'    shift, and go to state 109


State 97

   40 condition_: condition_ ANDOP relation •

    $default  reduce using rule 40 (condition_)


State 98

   43 relation: expression RELOP expression •
   44 expression: expression • ADDOP term

    ADDOP  shift, and go to state 63

    $default  reduce using rule 43 (relation)


State 99

   37 list_choice: IDENTIFIER •

    $default  reduce using rule 37 (list_choice)


State 100

   16 list: '(' • expressions ')'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    NOTOP         shift, and go to state 25
    '('           shift, and go to state 30

    expressions  go to state 110
    expression   go to state 111
    term         go to state 34
    factor       go to state 35
    unary        go to state 36
    primary      go to state 37


State 101

   36 list_choice: list •

    $default  reduce using rule 36 (list_choice)


State 102

   26 statement: FOLD direction operator list_choice • ENDFOLD

    ENDFOLD  shift, and go to state 112


State 103

   25 statement: IF condition THEN statement_ • other ELSE statement_ ENDIF

    $default  reduce using rule 28 (other)

    other  go to state 113


State 104

   15 variable: IDENTIFIER ':' LIST OF type IS • list ';'

    '('  shift, and go to state 100

    list  go to state 114


State 105

   14 variable: IDENTIFIER ':' type IS statement ';' •

    $default  reduce using rule 14 (variable)


State 106

   31 case: CASE • INT_LITERAL ARROW statement ';'

    INT_LITERAL  shift, and go to state 115


State 107

   24 statement: SWITCH expression IS cases OTHERS • ARROW statement ';' ENDSWITCH

    ARROW  shift, and go to state 116


State 108

   29 cases: cases case •

    $default  reduce using rule 29 (cases)


State 109

   23 statement: WHEN condition ',' expression ':' • expression

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    NOTOP         shift, and go to state 25
    '('           shift, and go to state 30

    expression  go to state 117
    term        go to state 34
    factor      go to state 35
    unary       go to state 36
    primary     go to state 37


State 110

   16 list: '(' expressions • ')'
   17 expressions: expressions • ',' expression

    ','  shift, and go to state 118
    ')'  shift, and go to state 119


State 111

   18 expressions: expression •
   44 expression: expression • ADDOP term

    ADDOP  shift, and go to state 63

    $default  reduce using rule 18 (expressions)


State 112

   26 statement: FOLD direction operator list_choice ENDFOLD •

    $default  reduce using rule 26 (statement)


State 113

   25 statement: IF condition THEN statement_ other • ELSE statement_ ENDIF
   27 other: other • ELSIF condition THEN statement ';'

    ELSE   shift, and go to state 120
    ELSIF  shift, and go to state 121


State 114

   15 variable: IDENTIFIER ':' LIST OF type IS list • ';'

    ';'  shift, and go to state 122


State 115

   31 case: CASE INT_LITERAL • ARROW statement ';'

    ARROW  shift, and go to state 123


State 116

   24 statement: SWITCH expression IS cases OTHERS ARROW • statement ';' ENDSWITCH

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    NOTOP         shift, and go to state 25
    SWITCH        shift, and go to state 26
    WHEN          shift, and go to state 27
    FOLD          shift, and go to state 28
    IF            shift, and go to state 29
    '('           shift, and go to state 30

    statement   go to state 124
    expression  go to state 33
    term        go to state 34
    factor      go to state 35
    unary       go to state 36
    primary     go to state 37


State 117

   23 statement: WHEN condition ',' expression ':' expression •
   44 expression: expression • ADDOP term

    ADDOP  shift, and go to state 63

    $default  reduce using rule 23 (statement)


State 118

   17 expressions: expressions ',' • expression

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    NOTOP         shift, and go to state 25
    '('           shift, and go to state 30

    expression  go to state 125
    term        go to state 34
    factor      go to state 35
    unary       go to state 36
    primary     go to state 37


State 119

   16 list: '(' expressions ')' •

    $default  reduce using rule 16 (list)


State 120

   25 statement: IF condition THEN statement_ other ELSE • statement_ ENDIF

    error         shift, and go to state 19
    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    NOTOP         shift, and go to state 25
    SWITCH        shift, and go to state 26
    WHEN          shift, and go to state 27
    FOLD          shift, and go to state 28
    IF            shift, and go to state 29
    '('           shift, and go to state 30

    statement_  go to state 126
    statement   go to state 32
    expression  go to state 33
    term        go to state 34
    factor      go to state 35
    unary       go to state 36
    primary     go to state 37


State 121

   27 other: other ELSIF • condition THEN statement ';'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    NOTOP         shift, and go to state 25
    '('           shift, and go to state 51

    condition   go to state 127
    condition_  go to state 53
    relation    go to state 54
    expression  go to state 55
    term        go to state 34
    factor      go to state 35
    unary       go to state 36
    primary     go to state 37


State 122

   15 variable: IDENTIFIER ':' LIST OF type IS list ';' •

    $default  reduce using rule 15 (variable)


State 123

   31 case: CASE INT_LITERAL ARROW • statement ';'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    NOTOP         shift, and go to state 25
    SWITCH        shift, and go to state 26
    WHEN          shift, and go to state 27
    FOLD          shift, and go to state 28
    IF            shift, and go to state 29
    '('           shift, and go to state 30

    statement   go to state 128
    expression  go to state 33
    term        go to state 34
    factor      go to state 35
    unary       go to state 36
    primary     go to state 37


State 124

   24 statement: SWITCH expression IS cases OTHERS ARROW statement • ';' ENDSWITCH

    ';'  shift, and go to state 129


State 125

   17 expressions: expressions ',' expression •
   44 expression: expression • ADDOP term

    ADDOP  shift, and go to state 63

    $default  reduce using rule 17 (expressions)


State 126

   25 statement: IF condition THEN statement_ other ELSE statement_ • ENDIF

    ENDIF  shift, and go to state 130


State 127

   27 other: other ELSIF condition • THEN statement ';'
   38 condition: condition • OROP condition_

    OROP  shift, and go to state 76
    THEN  shift, and go to state 131


State 128

   31 case: CASE INT_LITERAL ARROW statement • ';'

    ';'  shift, and go to state 132


State 129

   24 statement: SWITCH expression IS cases OTHERS ARROW statement ';' • ENDSWITCH

    ENDSWITCH  shift, and go to state 133


State 130

   25 statement: IF condition THEN statement_ other ELSE statement_ ENDIF •

    $default  reduce using rule 25 (statement)


State 131

   27 other: other ELSIF condition THEN • statement ';'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    NOTOP         shift, and go to state 25
    SWITCH        shift, and go to state 26
    WHEN          shift, and go to state 27
    FOLD          shift, and go to state 28
    IF            shift, and go to state 29
    '('           shift, and go to state 30

    statement   go to state 134
    expression  go to state 33
    term        go to state 34
    factor      go to state 35
    unary       go to state 36
    primary     go to state 37


State 132

   31 case: CASE INT_LITERAL ARROW statement ';' •

    $default  reduce using rule 31 (case)


State 133

   24 statement: SWITCH expression IS cases OTHERS ARROW statement ';' ENDSWITCH •

    $default  reduce using rule 24 (statement)


State 134

   27 other: other ELSIF condition THEN statement • ';'

    ';'  shift, and go to state 135


State 135

   27 other: other ELSIF condition THEN statement ';' •

    $default  reduce using rule 27 (other)
